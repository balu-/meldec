package doc_test

import (
	"io/ioutil"
	"testing"

	"github.com/ncaunt/meldec/internal/pkg/doc"
)

func TestXmlDocUnpack(t *testing.T) {
	expected := []string{
		"fc62027a100110031213243408000000000000000079",
		"fc62027a1002010f0000000000000000000000000000",
		"fc62027a10030080000000000000010000000000008e",
		"fc62027a1004240000000000000000000000000000ea",
		"fc62027a100500000000000000000600000000000007",
		"fc62027a10060000000000000000000000000000000c",
		"fc62027a100700000001000501010101000000000001",
		"fc62027a100907d007d00dbf0dac1770388c64000027",
		"fc62027a100b0802f0c4f0c40b09c40b5c0000000056",
		"fc62027a100c0e42990ce49111c6ab0000000000001a",
		"fc62027a100d09c40b09c40b09c40b09c40b000000a5",
		"fc62027a100e09c40209c40200000000000000000066",
		"fc62027a101000000000000000000000000000000002",
		"fc62027a1011e700800050000000000000000000004a",
		"fc62027a101301004b0017000000000000000000009c",
		"fc62027a1014000000000000000000000011000000ed",
		"fc62027a10150100ff010000010000000400000000f7",
		"fc62027a1016000000000000000000000000000000fc",
		"fc62027a1017000000000000000000000000000000fb",
		"fc62027a1018000000000000000000000000000000fa",
		"fc62027a1019000002000000000000000000000000f7",
		"fc62027a101a000000000000000000000000000000f8",
		"fc62027a101c000000000000000000000000000000f6",
		"fc62027a101d000000000000000000000000000000f5",
		"fc62027a101e000000000000000000000000000000f4",
		"fc62027a101f000000000000000000000000000000f3",
		"fc62027a1020000000000000000000000000000000f2",
		"fc62027a102600000102000002138807d00dac0000bc",
		"fc62027a1027000000000000000000000000000000eb",
		"fc62027a1028000000000100010101000000000000e6",
		"fc62027a102900000007d007d000000000000000003b",
		"fc62027a10a1100311001738000000000107000000f6",
	}

	b, err := ioutil.ReadFile("../../../examples/encoded_request_xml")
	if err != nil {
		t.Error(err)
	}

	d, err := doc.NewDoc(b)
	if err != nil {
		t.Error(err)
	}

	if len(d.Codes) != len(expected) {
		t.Errorf("expected %d codes, got %d", len(expected), len(d.Codes))
	}

	for i := 0; i < len(d.Codes); i++ {
		if expected[i] != string(d.Codes[i]) {
			t.Errorf("code %d: expected %s, got %s", i, expected[i], d.Codes[i])
		}
	}
}
